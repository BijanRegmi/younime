// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    // Next Auth
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model User {
    // Next Auth
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]

    // Own
    password String?
    bio      String?   @db.VarChar(512)
    comments comment[]
}

model anime {
    id         Int       @id
    title      String
    alttitle   String?
    score      Float     @default(0.0)
    age_rating String?
    studio     String?
    season     String?
    type       String?
    thumbnail  String?
    synopsis   String?
    genres     genre[]
    episodes   episode[]
    mapping    mapping[]
}

model comment {
    id        Int      @id @default(autoincrement())
    content   String
    spoiler   Boolean? @default(false)
    likes     Int      @default(0)
    dislikes  Int      @default(0)
    User      User?    @relation(fields: [User_id], references: [id])
    User_id   String?
    episode   episode? @relation(fields: [episodeId], references: [id])
    episodeId Int?
}

model episode {
    id       Int       @id @default(autoincrement())
    file_url String?   @unique
    name     String?
    anime    anime     @relation(fields: [animeId], references: [id])
    animeId  Int
    comments comment[]
}

model genre {
    name  String  @id
    anime anime[]
}

model mapping {
    id      Int   @id
    mal     anime @relation(fields: [animeId], references: [id])
    animeId Int

    @@unique([id, animeId])
}
